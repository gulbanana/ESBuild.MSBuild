<Project>
    <Import Project="$(MSBuildThisFileDirectory)ESBuild.MSBuild.Tasks.proj" />

    <!-- Use the specified dist path or a default -->
    <Target Name="_ESBuildDefineProps">
        <PropertyGroup>
            <_ESBundlePath>$(IntermediateOutputPath)esbundle\</_ESBundlePath>
            <_ESOutputPath>$(IntermediateOutputPath)esbuild\</_ESOutputPath>
            <_ESOutputPath Condition="'$(ESBuildIntermediatePath)' != ''">$(ESBuildIntermediatePath)</_ESOutputPath>
        </PropertyGroup>
    </Target>

    <!-- Extract items with Group set, which represent a single entry point per glob -->
    <Target Name="_ESBuildExtractGroups">
        <ItemGroup>
            <_ESBundle Include="@(ESBuild)" Condition="%(ESBuild.Group) != ''" />
            <ESBuild Remove="@(ESBuild)" Condition="'%(ESBuild.Group)' != ''" />
        </ItemGroup>
    </Target>

    <!-- Define an entrypoint for each group of items -->
    <Target Name="_ESBuildPartitionGroups" DependsOnTargets="_ESBuildDefineProps;_ESBuildExtractGroups">
        <_ESConcatPrep Sources="@(_ESBundle)" BundlePath="$(_ESBundlePath)" Group="%(_ESBundle.Group)">
            <Output TaskParameter="EntryPoint" ItemName="_ESBundleEntryPoint" />
        </_ESConcatPrep>

        <ItemGroup>
            <ESBuild Include="@(_ESBundleEntryPoint)" />
        </ItemGroup>
    </Target>
    
    <!-- Perform the actual concatenation if inputs have changed -->
    <Target Name="_ESBuildConcatGroups" DependsOnTargets="_ESBuildDefineProps;_ESBuildExtractGroups" Inputs="@(_ESBundle)" Outputs="$(_ESBundlePath)%(Group)">
        <_ESConcat Sources="@(_ESBundle)" BundlePath="$(_ESBundlePath)" />
    </Target>

    <!-- Assign each bundle item a destination, which depends on whether it was preconcatenated -->
    <Target Name="_ESBuildResolve" DependsOnTargets="_ESBuildPartitionGroups;_ESBuildConcatGroups">
        <_ESResolve EntryPoints="@(ESBuild)" ExtensionMap="@(ESBuildMapExtension)" OutputPath="$(_ESOutputPath)">
            <Output TaskParameter="ResolvedEntryPoints" ItemName="_ESBuildResolved" />
        </_ESResolve>
    </Target>

    <!-- Calculate each entry point's config, run esbuild and notify about it -->
    <Target Name="_ESBuildTransform" DependsOnTargets="_ESBuildResolve" Inputs="@(_ESBuildResolved)" Outputs="@(_ESBuildResolved -> '%(Dest)')">
        <ItemGroup>
            <_ESEntryPoint Include="%(_ESBuildResolved.Dest)">
                <Src>%(_ESBuildResolved.Identity)</Src>

                <Spec>%(_ESBuildResolved.Identity)</Spec>
                <Spec Condition="'%(_ESBuildResolved.Spec)' != ''">%(_ESBuildResolved.Spec)</Spec>

                <Bundle Condition="'%(_ESBuildResolved.Bundle)' == 'True'"> --bundle</Bundle>
                <Bundle Condition="'%(_ESBuildResolved.Bundle)' == '' and '$(ESBuildBundle)' == 'True'"> --bundle</Bundle>
                
                <Minify Condition="'%(_ESBuildResolved.Minify)' == 'True'"> --minify</Minify>
                <Minify Condition="'%(_ESBuildResolved.Minify)' == '' and '$(ESBuildMinify)' == 'True'"> --minify</Minify>

                <Targets Condition="'%(_ESBuildResolved.Targets)' != ''"> --target=$([System.String]::new("%(_ESBuildResolved.Targets)").Replace(";", ","))</Targets>
                <Targets Condition="'%(_ESBuildResolved.Targets)' == '' and '$(ESBuildTargets)' != ''"> --target=$([System.String]::new("$(ESBuildTargets)").Replace(";", ","))</Targets>

                <Externals Condition="'%(_ESBuildResolved.Externals)' != ''"> --external:$([System.String]::new("%(_ESBuildResolved.Externals)").Replace(";", " --external:"))</Externals>
                <Externals Condition="'%(_ESBuildResolved.Externals)' == '' and '$(ESBuildExternals)' != ''"> --external:$([System.String]::new("$(ESBuildExternals)").Replace(";", " --external:"))</Externals>

                <Arguments>$(ESBuildArguments)</Arguments>
                <Arguments Condition="'%(_ESBuildResolved.Arguments)' != ''">%(ESBuild.Arguments)</Arguments>
            </_ESEntryPoint>
        </ItemGroup>

        <Message Condition="'$(ESBuildEcho)' != 'False' and '%(_ESEntryPoint.Arguments)' != ''" Importance="high" 
                 Text='esbuild %(_ESEntryPoint.Src) --log-level=warning --outdir=%(_ESEntryPoint.RelativeDir) %(_ESEntryPoint.Arguments)' />

        <Message Condition="'$(ESBuildEcho)' != 'False' and '%(_ESEntryPoint.Arguments)' == ''" Importance="high" 
                 Text='esbuild %(_ESEntryPoint.Src) --log-level=warning --outdir=%(_ESEntryPoint.RelativeDir)%(_ESEntryPoint.Bundle)%(_ESEntryPoint.Minify)%(_ESEntryPoint.Targets)%(_ESEntryPoint.Externals)' />

        <Exec Condition="'%(_ESEntryPoint.Arguments)' != ''" 
              Command='"$(ESBuildBinaryPath)" %(_ESEntryPoint.Src) --log-level=warning --outdir=%(_ESEntryPoint.RelativeDir) %(_ESEntryPoint.Arguments)'>
            <Output TaskParameter="ExitCode" PropertyName="_ESExitCode" />
        </Exec>

        <Exec Condition="'%(_ESEntryPoint.Arguments)' == ''" 
              Command='"$(ESBuildBinaryPath)" %(_ESEntryPoint.Src) --log-level=warning --outdir=%(_ESEntryPoint.RelativeDir)%(_ESEntryPoint.Bundle)%(_ESEntryPoint.Minify)%(_ESEntryPoint.Targets)%(_ESEntryPoint.Externals)'>
            <Output TaskParameter="ExitCode" PropertyName="_ESExitCode" />
        </Exec>

        <Message Condition="$(_ESExitCode) == 0" Importance="high"
                 Text="%(_ESEntryPoint.Spec) -> $([System.IO.Path]::GetFullPath('%(_ESEntryPoint.Identity)'))" />
    </Target>

    <!-- Even if the transform target was skipped, it defined entrypoint items; mark those as content -->
    <Target Name="_ESBuildOutputs" DependsOnTargets="_ESBuildTransform" BeforeTargets="AssignTargetPaths;ResolveProjectStaticWebAssets">
        <ItemGroup>
            <FileWrites Include="@(_ESBundleEntryPoint)" />
            <UpToDateCheckInput Include="@(_ESBundle)" Set="%(_ESBundle.Group)" />
            <UpToDateCheckOutput Include="@(_ESBundleEntryPoint)" Set="%(_ESBundleEntryPoint.Filename)%(_ESBundleEntryPoint.Extension)" />
            <UpToDateCheckBuilt Include="@(_ESEntryPoint)" Original="%(_ESEntryPoint.Src)" />
        </ItemGroup>

        <ItemGroup Condition="'$(_ESExitCode)' == '0' or '$(_ESExitCode)' == ''">
            <Content Include="@(_ESEntryPoint)" Link="$(ESBuildWebRoot)%(_ESEntryPoint.Src)" />
            <FileWrites Include="@(_ESEntryPoint)" />
        </ItemGroup>
    </Target>

    <!-- Content in wwwroot becomes an SWA, but the physical files aren't there - to run locally, we need to redefine their location -->
    <Target Name="_ESBuildResetContentRoot" DependsOnTargets="_ESBuildDefineProps;ResolveProjectStaticWebAssets" BeforeTargets="GenerateStaticWebAssetsManifest">
        <ItemGroup>
            <StaticWebAsset Condition="$([System.String]::new('%(StaticWebAsset.OriginalItemSpec)').StartsWith($(_ESOutputPath)))">
                <ContentRoot>$(_ESOutputPath)</ContentRoot>
            </StaticWebAsset>
        </ItemGroup>
    </Target>
</Project>
