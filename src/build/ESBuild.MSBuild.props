<Project>
    <PropertyGroup>
        <_ESBuildOS Condition="$([MSBuild]::IsOsPlatform('Windows'))">win</_ESBuildOS>
        <_ESBuildOS Condition="$([MSBuild]::IsOsPlatform('Linux'))">linux</_ESBuildOS>
        <_ESBuildOS Condition="$([MSBuild]::IsOsPlatform('OSX'))">osx</_ESBuildOS>
        <_ESBuildArch Condition="$([System.Runtime.InteropServices.RuntimeInformation]::OSArchitecture) == X64">x64</_ESBuildArch>
        <_ESBuildArch Condition="$([System.Runtime.InteropServices.RuntimeInformation]::OSArchitecture) == Arm64">arm64</_ESBuildArch>
        <_ESBuildBinary>esbuild</_ESBuildBinary>
        <_ESBuildBinary Condition="'$(OS)' == 'Windows_NT'">esbuild.exe</_ESBuildBinary>
        <ESBuildIntermediatePath></ESBuildIntermediatePath>
        <ESBuildBinaryPath Condition="'$(ESBuildBinaryPath)' == ''">$(MSBuildThisFileDirectory)..\tools\$(_ESBuildOS)-$(_ESBuildArch)\$(_ESBuildBinary)</ESBuildBinaryPath>                
        <ESBuildWebRoot Condition="'$(ESBuildWebRoot)' == ''">wwwroot\</ESBuildWebRoot>        
        <ESBuildEcho Condition="'$(ESBuildEcho)' == ''">False</ESBuildEcho>
        <ESBuildArguments></ESBuildArguments>
        <ESBuildBundle>True</ESBuildBundle>
        <ESBuildExternals></ESBuildExternals>
        <ESBuildMinify>False</ESBuildMinify>
        <ESBuildMinify Condition="'$(Configuration)' == 'Release'">True</ESBuildMinify>
        <ESBuildTargets>esnext</ESBuildTargets>
    </PropertyGroup>

    <ItemGroup>
        <ESBuildMapExtension Include=".tsx;.ts;.jsx;.json;.txt" To=".js" />
    </ItemGroup>
</Project>